{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require(\"lodash\");\n\nvar logger_1 = require(\"./logger\");\n\nvar logger = logger_1.getInstance();\n\nfunction init(proxy, option) {\n  var handlers = getHandlers(option);\n\n  for (var _i = 0, _Object$keys = Object.keys(handlers); _i < _Object$keys.length; _i++) {\n    var eventName = _Object$keys[_i];\n    proxy.on(eventName, handlers[eventName]);\n  }\n\n  logger.debug('[HPM] Subscribed to http-proxy events:', Object.keys(handlers));\n}\n\nexports.init = init;\n\nfunction getHandlers(options) {\n  // https://github.com/nodejitsu/node-http-proxy#listening-for-proxy-events\n  var proxyEvents = ['error', 'proxyReq', 'proxyReqWs', 'proxyRes', 'open', 'close'];\n  var handlers = {};\n\n  for (var _i2 = 0, _proxyEvents = proxyEvents; _i2 < _proxyEvents.length; _i2++) {\n    var event = _proxyEvents[_i2];\n\n    // all handlers for the http-proxy events are prefixed with 'on'.\n    // loop through options and try to find these handlers\n    // and add them to the handlers object for subscription in init().\n    var eventName = _.camelCase('on ' + event);\n\n    var fnHandler = _.get(options, eventName);\n\n    if (_.isFunction(fnHandler)) {\n      handlers[event] = fnHandler;\n    }\n  } // add default error handler in absence of error handler\n\n\n  if (!_.isFunction(handlers.error)) {\n    handlers.error = defaultErrorHandler;\n  } // add default close handler in absence of close handler\n\n\n  if (!_.isFunction(handlers.close)) {\n    handlers.close = logClose;\n  }\n\n  return handlers;\n}\n\nexports.getHandlers = getHandlers;\n\nfunction defaultErrorHandler(err, req, res) {\n  var host = req.headers && req.headers.host;\n  var code = err.code;\n\n  if (res.writeHead && !res.headersSent) {\n    if (/HPE_INVALID/.test(code)) {\n      res.writeHead(502);\n    } else {\n      switch (code) {\n        case 'ECONNRESET':\n        case 'ENOTFOUND':\n        case 'ECONNREFUSED':\n          res.writeHead(504);\n          break;\n\n        default:\n          res.writeHead(500);\n      }\n    }\n  }\n\n  res.end('Error occured while trying to proxy to: ' + host + req.url);\n}\n\nfunction logClose(req, socket, head) {\n  // view disconnected websocket connections\n  logger.info('[HPM] Client disconnected');\n}","map":{"version":3,"sources":["C:/Users/souha/Desktop/PFE MastÃ©re/Getlearn1/app_getlearn/front/node_modules/http-proxy-middleware/dist/handlers.js"],"names":["Object","defineProperty","exports","value","_","require","logger_1","logger","getInstance","init","proxy","option","handlers","getHandlers","keys","eventName","on","debug","options","proxyEvents","event","camelCase","fnHandler","get","isFunction","error","defaultErrorHandler","close","logClose","err","req","res","host","headers","code","writeHead","headersSent","test","end","url","socket","head","info"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst logger_1 = require(\"./logger\");\nconst logger = logger_1.getInstance();\nfunction init(proxy, option) {\n    const handlers = getHandlers(option);\n    for (const eventName of Object.keys(handlers)) {\n        proxy.on(eventName, handlers[eventName]);\n    }\n    logger.debug('[HPM] Subscribed to http-proxy events:', Object.keys(handlers));\n}\nexports.init = init;\nfunction getHandlers(options) {\n    // https://github.com/nodejitsu/node-http-proxy#listening-for-proxy-events\n    const proxyEvents = ['error', 'proxyReq', 'proxyReqWs', 'proxyRes', 'open', 'close'];\n    const handlers = {};\n    for (const event of proxyEvents) {\n        // all handlers for the http-proxy events are prefixed with 'on'.\n        // loop through options and try to find these handlers\n        // and add them to the handlers object for subscription in init().\n        const eventName = _.camelCase('on ' + event);\n        const fnHandler = _.get(options, eventName);\n        if (_.isFunction(fnHandler)) {\n            handlers[event] = fnHandler;\n        }\n    }\n    // add default error handler in absence of error handler\n    if (!_.isFunction(handlers.error)) {\n        handlers.error = defaultErrorHandler;\n    }\n    // add default close handler in absence of close handler\n    if (!_.isFunction(handlers.close)) {\n        handlers.close = logClose;\n    }\n    return handlers;\n}\nexports.getHandlers = getHandlers;\nfunction defaultErrorHandler(err, req, res) {\n    const host = req.headers && req.headers.host;\n    const code = err.code;\n    if (res.writeHead && !res.headersSent) {\n        if (/HPE_INVALID/.test(code)) {\n            res.writeHead(502);\n        }\n        else {\n            switch (code) {\n                case 'ECONNRESET':\n                case 'ENOTFOUND':\n                case 'ECONNREFUSED':\n                    res.writeHead(504);\n                    break;\n                default:\n                    res.writeHead(500);\n            }\n        }\n    }\n    res.end('Error occured while trying to proxy to: ' + host + req.url);\n}\nfunction logClose(req, socket, head) {\n    // view disconnected websocket connections\n    logger.info('[HPM] Client disconnected');\n}\n"]},"metadata":{},"sourceType":"script"}