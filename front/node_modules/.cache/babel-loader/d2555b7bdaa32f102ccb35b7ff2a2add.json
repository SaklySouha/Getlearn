{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\souha\\\\Desktop\\\\PFE Mast\\xE9re\\\\Getlearn1\\\\app_getlearn\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { AUTH_ATTEMPTING, AUTH_SUCCESS, AUTH_FAILED } from '../actions/types';\nvar INITIAL_STATE = {\n  attempting: false,\n  isAuth: false,\n  profile: {},\n  error: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'AUTH_ATTEMPTING':\n      return _objectSpread({}, state, {\n        attempting: true,\n        isAuth: false,\n        error: null\n      });\n\n    case 'AUTH_SUCCESS':\n      return _objectSpread({}, state, {\n        attempting: false,\n        isAuth: true,\n        error: null\n      });\n\n    case 'AUTH_FAILED':\n      return _objectSpread({}, state, {\n        attempting: false,\n        isAuth: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/souha/Desktop/PFE MastÃ©re/Getlearn1/app_getlearn/front/src/reducers/auth_reducer.js"],"names":["AUTH_ATTEMPTING","AUTH_SUCCESS","AUTH_FAILED","INITIAL_STATE","attempting","isAuth","profile","error","state","action","type","payload"],"mappings":";AAAA,SAAQA,eAAR,EAAwBC,YAAxB,EAAqCC,WAArC,QAAuD,kBAAvD;AACA,IAAMC,aAAa,GAAG;AACrBC,EAAAA,UAAU,EAAC,KADU;AAErBC,EAAAA,MAAM,EAAC,KAFc;AAGrBC,EAAAA,OAAO,EAAC,EAHa;AAIrBC,EAAAA,KAAK,EAAC;AAJe,CAAtB;AAUA,gBAAe,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAI,iBAAJ;AACI,+BAAWF,KAAX;AAAiBJ,QAAAA,UAAU,EAAC,IAA5B;AAAiCC,QAAAA,MAAM,EAAC,KAAxC;AAA8CE,QAAAA,KAAK,EAAC;AAApD;;AACJ,SAAI,cAAJ;AACI,+BAAWC,KAAX;AAAiBJ,QAAAA,UAAU,EAAC,KAA5B;AAAkCC,QAAAA,MAAM,EAAC,IAAzC;AAA8CE,QAAAA,KAAK,EAAC;AAApD;;AACJ,SAAI,aAAJ;AACI,+BAAWC,KAAX;AAAiBJ,QAAAA,UAAU,EAAC,KAA5B;AAAkCC,QAAAA,MAAM,EAAC,KAAzC;AAA+CE,QAAAA,KAAK,EAACE,MAAM,CAACE;AAA5D;;AACJ;AACI,aAAOH,KAAP;AARR;AAUH,CAXD","sourcesContent":["import {AUTH_ATTEMPTING,AUTH_SUCCESS,AUTH_FAILED} from '../actions/types';\r\nconst INITIAL_STATE = {\r\n attempting:false,\r\n isAuth:false,\r\n profile:{},\r\n error:null\r\n \r\n \r\n\r\n};\r\n \r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case'AUTH_ATTEMPTING' :\r\n            return {...state,attempting:true,isAuth:false,error:null};\r\n        case'AUTH_SUCCESS' :\r\n            return {...state,attempting:false,isAuth:true,error:null};\r\n        case'AUTH_FAILED' :\r\n            return {...state,attempting:false,isAuth:false,error:action.payload};\r\n        default:\r\n            return state\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}